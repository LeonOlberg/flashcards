"""Change ID from Integer to UUID and remove deck_id from drawn card

Revision ID: 4dab8c2e1741
Revises: fa8257d68b59
Create Date: 2025-01-08 21:23:09.100386

"""
from alembic import op
import sqlalchemy as sa
import uuid
from sqlalchemy.dialects.postgresql import UUID


# revision identifiers, used by Alembic.
revision = '4dab8c2e1741'
down_revision = 'fa8257d68b59'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new UUID columns
    op.add_column('deck', sa.Column('uuid_id', UUID(as_uuid=True), nullable=True))
    op.execute("UPDATE deck SET uuid_id = uuid_generate_v4()")

    op.add_column('card', sa.Column('uuid_id', UUID(as_uuid=True), nullable=True))
    op.execute("UPDATE card SET uuid_id = uuid_generate_v4()")

    op.add_column('card', sa.Column('uuid_deck_id', UUID(as_uuid=True), nullable=True))
    op.execute("UPDATE card SET uuid_deck_id = (SELECT uuid_id FROM deck WHERE deck.id = card.deck_id)")

    op.add_column('drawn_card', sa.Column('uuid_id', UUID(as_uuid=True), nullable=True))
    op.execute("UPDATE drawn_card SET uuid_id = uuid_generate_v4()")

    op.add_column('drawn_card', sa.Column('uuid_card_id', UUID(as_uuid=True), nullable=True))
    op.execute("UPDATE drawn_card SET uuid_card_id = (SELECT uuid_id FROM card WHERE card.id = drawn_card.card_id)")

    # Make the new UUID columns non-nullable
    op.alter_column('deck', 'uuid_id', nullable=False)
    op.alter_column('card', 'uuid_id', nullable=False)
    op.alter_column('drawn_card', 'uuid_id', nullable=False)
    op.alter_column('drawn_card', 'uuid_card_id', nullable=False)

    # Drop old primary keys and foreign key constraints
    op.drop_constraint('card_deck_id_fkey', 'card', type_='foreignkey')
    op.drop_constraint('drawn_card_card_id_fkey', 'drawn_card', type_='foreignkey')

    op.drop_constraint('deck_pkey', 'deck', type_='primary')
    op.drop_constraint('card_pkey', 'card', type_='primary')
    op.drop_constraint('drawn_card_pkey', 'drawn_card', type_='primary')

    # Drop old integer columns
    op.drop_column('deck', 'id')
    op.drop_column('card', 'id')
    op.drop_column('card', 'deck_id')
    op.drop_column('drawn_card', 'id')
    op.drop_column('drawn_card', 'card_id')

    # Rename UUID columns to original names
    op.alter_column('deck', 'uuid_id', new_column_name='id')
    op.alter_column('card', 'uuid_id', new_column_name='id')
    op.alter_column('card', 'uuid_deck_id', new_column_name='deck_id')
    op.alter_column('drawn_card', 'uuid_id', new_column_name='id')
    op.alter_column('drawn_card', 'uuid_card_id', new_column_name='card_id')

    # Add new primary keys and foreign key constraints
    op.create_primary_key('deck_pkey', 'deck', ['id'])
    op.create_primary_key('card_pkey', 'card', ['id'])
    op.create_primary_key('drawn_card_pkey', 'drawn_card', ['id'])

    op.create_foreign_key('card_deck_id_fkey', 'card', 'deck', ['deck_id'], ['id'])
    op.create_foreign_key('drawn_card_card_id_fkey', 'drawn_card', 'card', ['card_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new integer columns
    op.add_column('deck', sa.Column('int_id', sa.Integer(), nullable=True))
    op.execute("CREATE SEQUENCE deck_id_seq")
    op.execute("ALTER TABLE deck ALTER COLUMN int_id SET DEFAULT nextval('deck_id_seq')")
    op.execute("UPDATE deck SET int_id = nextval('deck_id_seq')")

    op.add_column('card', sa.Column('int_id', sa.Integer(), nullable=True))
    op.execute("CREATE SEQUENCE card_id_seq")
    op.execute("ALTER TABLE card ALTER COLUMN int_id SET DEFAULT nextval('card_id_seq')")
    op.execute("UPDATE card SET int_id = nextval('card_id_seq')")

    op.add_column('card', sa.Column('int_deck_id', sa.Integer(), nullable=True))
    op.execute("UPDATE card SET int_deck_id = (SELECT int_id FROM deck WHERE deck.id = card.deck_id)")

    op.add_column('drawn_card', sa.Column('int_id', sa.Integer(), nullable=True))
    op.execute("CREATE SEQUENCE drawn_card_id_seq")
    op.execute("ALTER TABLE drawn_card ALTER COLUMN int_id SET DEFAULT nextval('drawn_card_id_seq')")
    op.execute("UPDATE drawn_card SET int_id = nextval('drawn_card_id_seq')")

    op.add_column('drawn_card', sa.Column('int_card_id', sa.Integer(), nullable=True))
    op.execute("UPDATE drawn_card SET int_card_id = (SELECT int_id FROM card WHERE card.id = drawn_card.card_id)")

    # Make the new integer columns non-nullable
    op.alter_column('deck', 'int_id', nullable=False)
    op.alter_column('card', 'int_id', nullable=False)
    op.alter_column('drawn_card', 'int_id', nullable=False)
    op.alter_column('drawn_card', 'int_card_id', nullable=False)

    # Drop old primary keys and foreign key constraints
    op.drop_constraint('card_deck_id_fkey', 'card', type_='foreignkey')
    op.drop_constraint('drawn_card_card_id_fkey', 'drawn_card', type_='foreignkey')

    op.drop_constraint('deck_pkey', 'deck', type_='primary')
    op.drop_constraint('card_pkey', 'card', type_='primary')
    op.drop_constraint('drawn_card_pkey', 'drawn_card', type_='primary')

    # Drop old UUID columns
    op.drop_column('deck', 'id')
    op.drop_column('card', 'id')
    op.drop_column('card', 'deck_id')
    op.drop_column('drawn_card', 'id')
    op.drop_column('drawn_card', 'card_id')

    # Rename integer columns to original names
    op.alter_column('deck', 'int_id', new_column_name='id')
    op.alter_column('card', 'int_id', new_column_name='id')
    op.alter_column('card', 'int_deck_id', new_column_name='deck_id')
    op.alter_column('drawn_card', 'int_id', new_column_name='id')
    op.alter_column('drawn_card', 'int_card_id', new_column_name='card_id')

    # Add new primary keys and foreign key constraints
    op.create_primary_key('deck_pkey', 'deck', ['id'])
    op.create_primary_key('card_pkey', 'card', ['id'])
    op.create_primary_key('drawn_card_pkey', 'drawn_card', ['id'])

    op.create_foreign_key('card_deck_id_fkey', 'card', 'deck', ['deck_id'], ['id'])
    op.create_foreign_key('drawn_card_card_id_fkey', 'drawn_card', 'card', ['card_id'], ['id'])
    # ### end Alembic commands ###
